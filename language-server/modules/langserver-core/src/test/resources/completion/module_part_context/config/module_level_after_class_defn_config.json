{
  "position": {
    "line": 23,
    "character": 0
  },
  "source": "module_part_context/source/module_part_start_and_end_of_decls_and_defns.bal",
  "description": "",
  "items": [
    {
      "label": "type",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "type",
      "insertText": "type ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "public",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "public",
      "insertText": "public ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "isolated",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "isolated",
      "insertText": "isolated ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "final",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "final",
      "insertText": "final ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "const",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "const",
      "insertText": "const ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "listener",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "listener",
      "insertText": "listener ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "client",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "client",
      "insertText": "client ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "var",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "var",
      "insertText": "var ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "enum",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "enum",
      "insertText": "enum ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "xmlns",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "xmlns",
      "insertText": "xmlns ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "class",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "class",
      "insertText": "class ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "transactional",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "transactional",
      "insertText": "transactional",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "function",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AE",
      "filterText": "function",
      "insertText": "function ${1:name}(${2})${3} {\n\t${4}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "public main function",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AA",
      "filterText": "public_function_main",
      "insertText": "public function main() {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "configurable",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "configurable",
      "insertText": "configurable",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "annotation",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "B",
      "filterText": "annotation",
      "insertText": "annotation ${1:typeName} ${2:name} on ${3:attachmentPoint};",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "type <RecordName> record {}",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AG",
      "filterText": "type_record",
      "insertText": "type ${1:RecordName} record {\n\t${2}\n};",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "xmlns",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "B",
      "filterText": "xmlns",
      "insertText": "xmlns \"${1}\" as ${2:ns};",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "type <ObjectName> object",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "B",
      "filterText": "type_object",
      "insertText": "type ${1:ObjectName} object {${2}};",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "class",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "B",
      "filterText": "class",
      "insertText": "class ${1:className} {\n\t${2}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "enum",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "B",
      "filterText": "enum",
      "insertText": "enum ${1:enumName} {\n\t${2}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "type <RecordName> record {||}",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AF",
      "filterText": "type_record",
      "insertText": "type ${1:RecordName} record {|\n\t${2}\n|};",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "type <ErrorName> error<?>",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "B",
      "filterText": "type_error",
      "insertText": "type ${1:ErrorName} error<${2:map<anydata>}>;",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "type TypeName table<>;",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "B",
      "filterText": "type_table",
      "insertText": "type ${1:TypeName} table<${2}>;",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "type TypeName table<> key",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "B",
      "filterText": "type_table_key",
      "insertText": "type ${1:TypeName} table<${2}> key${3}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "stream<> streamName = new;",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "B",
      "filterText": "stream",
      "insertText": "stream<${1}> ${2:streamName} = new;",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "service",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AB",
      "filterText": "service",
      "insertText": "service on ${1:listenerName} {\n\t${2}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "StrandData",
      "kind": "Struct",
      "detail": "Record",
      "documentation": {
        "left": "Describes Strand execution details for the runtime.\n"
      },
      "sortText": "CA",
      "insertText": "StrandData",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Thread",
      "kind": "TypeParameter",
      "detail": "Union",
      "sortText": "CA",
      "insertText": "Thread",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "record",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "record",
      "insertText": "record ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "function",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "AD",
      "filterText": "function",
      "insertText": "function ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "record {}",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "B",
      "filterText": "record",
      "insertText": "record {${1}}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "record {||}",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "B",
      "filterText": "record",
      "insertText": "record {|${1}|}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "distinct",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "distinct",
      "insertText": "distinct",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "object {}",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "B",
      "filterText": "object",
      "insertText": "object {${1}}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "true",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "true",
      "insertText": "true",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "false",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "false",
      "insertText": "false",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ballerina/lang.test",
      "kind": "Module",
      "detail": "Module",
      "sortText": "F",
      "filterText": "test",
      "insertText": "test",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.test;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.array",
      "kind": "Module",
      "detail": "Module",
      "sortText": "F",
      "filterText": "array",
      "insertText": "array",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.array;\n"
        }
      ]
    },
    {
      "label": "ballerina/jballerina.java",
      "kind": "Module",
      "detail": "Module",
      "sortText": "F",
      "filterText": "java",
      "insertText": "java",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import ballerina/jballerina.java;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.value",
      "kind": "Module",
      "detail": "Module",
      "sortText": "F",
      "filterText": "value",
      "insertText": "value",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.value;\n"
        }
      ]
    },
    {
      "label": "module1",
      "kind": "Module",
      "detail": "Module",
      "sortText": "F",
      "filterText": "module1",
      "insertText": "module1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ballerina/lang.runtime",
      "kind": "Module",
      "detail": "Module",
      "sortText": "F",
      "filterText": "runtime",
      "insertText": "runtime",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.runtime;\n"
        }
      ]
    },
    {
      "label": "map",
      "kind": "Unit",
      "detail": "type",
      "sortText": "E",
      "insertText": "map",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "object",
      "kind": "Unit",
      "detail": "type",
      "sortText": "E",
      "insertText": "object",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "stream",
      "kind": "Unit",
      "detail": "type",
      "sortText": "E",
      "insertText": "stream",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "table",
      "kind": "Unit",
      "detail": "type",
      "sortText": "E",
      "insertText": "table",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "transaction",
      "kind": "Unit",
      "detail": "type",
      "sortText": "E",
      "insertText": "transaction",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "test/project1",
      "kind": "Module",
      "detail": "Module",
      "sortText": "F",
      "filterText": "project1",
      "insertText": "project1",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import test/project1;\n"
        }
      ]
    },
    {
      "label": "test/project2",
      "kind": "Module",
      "detail": "Module",
      "sortText": "F",
      "filterText": "project2",
      "insertText": "project2",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import test/project2;\n"
        }
      ]
    },
    {
      "label": "test/local_project1",
      "kind": "Module",
      "detail": "Module",
      "sortText": "F",
      "filterText": "local_project1",
      "insertText": "local_project1",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import test/local_project1;\n"
        }
      ]
    },
    {
      "label": "test/local_project2",
      "kind": "Module",
      "detail": "Module",
      "sortText": "F",
      "filterText": "local_project2",
      "insertText": "local_project2",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import test/local_project2;\n"
        }
      ]
    },
    {
      "label": "null",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "D",
      "filterText": "null",
      "insertText": "null",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ONE",
      "kind": "TypeParameter",
      "detail": "Singleton",
      "sortText": "G",
      "insertText": "ONE",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "testConst",
      "kind": "TypeParameter",
      "detail": "Singleton",
      "sortText": "CA",
      "insertText": "testConst",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "TWO",
      "kind": "TypeParameter",
      "detail": "Singleton",
      "sortText": "G",
      "insertText": "TWO",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "testEnum",
      "kind": "Enum",
      "detail": "enum",
      "sortText": "G",
      "insertText": "testEnum",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "TestClass",
      "kind": "Interface",
      "detail": "Class",
      "sortText": "CA",
      "insertText": "TestClass",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "TestType",
      "kind": "TypeParameter",
      "detail": "Int",
      "sortText": "CA",
      "insertText": "TestType",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ballerina/lang.regexp",
      "kind": "Module",
      "detail": "Module",
      "sortText": "F",
      "filterText": "regexp",
      "insertText": "regexp",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.regexp;\n"
        }
      ]
    },
    {
      "label": "function <name>(..) => <expression>",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "B",
      "filterText": "function",
      "insertText": "function ${1:name}(${2})${3} => (${4});",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "readonly",
      "kind": "TypeParameter",
      "detail": "Readonly",
      "sortText": "CA",
      "insertText": "readonly",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "handle",
      "kind": "TypeParameter",
      "detail": "Handle",
      "sortText": "CA",
      "insertText": "handle",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "never",
      "kind": "TypeParameter",
      "detail": "Never",
      "sortText": "CA",
      "insertText": "never",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "json",
      "kind": "TypeParameter",
      "detail": "Json",
      "sortText": "CA",
      "insertText": "json",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "anydata",
      "kind": "TypeParameter",
      "detail": "Anydata",
      "sortText": "CA",
      "insertText": "anydata",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "any",
      "kind": "TypeParameter",
      "detail": "Any",
      "sortText": "CA",
      "insertText": "any",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "byte",
      "kind": "TypeParameter",
      "detail": "Byte",
      "sortText": "CA",
      "insertText": "byte",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "service",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "AD",
      "filterText": "service",
      "insertText": "service",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "decimal",
      "kind": "TypeParameter",
      "detail": "Decimal",
      "sortText": "CA",
      "insertText": "decimal",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "error",
      "kind": "Event",
      "detail": "Error",
      "sortText": "CA",
      "insertText": "error",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "xml",
      "kind": "TypeParameter",
      "detail": "Xml",
      "sortText": "CA",
      "insertText": "xml",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "boolean",
      "kind": "TypeParameter",
      "detail": "Boolean",
      "sortText": "CA",
      "insertText": "boolean",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "future",
      "kind": "TypeParameter",
      "detail": "Future",
      "sortText": "CA",
      "insertText": "future",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "int",
      "kind": "TypeParameter",
      "detail": "Int",
      "sortText": "CA",
      "insertText": "int",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "float",
      "kind": "TypeParameter",
      "detail": "Float",
      "sortText": "CA",
      "insertText": "float",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "function",
      "kind": "TypeParameter",
      "detail": "Function",
      "sortText": "CA",
      "insertText": "function",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "string",
      "kind": "TypeParameter",
      "detail": "String",
      "sortText": "CA",
      "insertText": "string",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "typedesc",
      "kind": "TypeParameter",
      "detail": "Typedesc",
      "sortText": "CA",
      "insertText": "typedesc",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "service on trigger.twilio:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_trigger_twilio_Listener",
      "insertText": "service ${1} on new twilio:Listener() {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/trigger.twilio;\n"
        }
      ]
    },
    {
      "label": "service on health.fhirr4:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_health_fhirr4_Listener",
      "insertText": "service ${1} on new fhirr4:Listener(${2:0}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/health.fhirr4;\n"
        }
      ]
    },
    {
      "label": "service on java.jms:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_java_jms_Listener",
      "insertText": "service ${1} on new jms:Listener() {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/java.jms;\n"
        }
      ]
    },
    {
      "label": "service on trigger.google.sheets:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_trigger_google_sheets_Listener",
      "insertText": "service ${1} on new sheets:Listener(${2:{spreadsheetId: \"\"}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/trigger.google.sheets;\n"
        }
      ]
    },
    {
      "label": "service on websocket:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_websocket_Listener",
      "insertText": "service ${1} on new websocket:Listener(${2:0}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/websocket;\n"
        }
      ]
    },
    {
      "label": "service on http:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_http_Listener",
      "insertText": "service ${1} on new http:Listener(${2:0}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/http;\n"
        }
      ]
    },
    {
      "label": "service on asb:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_asb_Listener",
      "insertText": "service ${1} on new asb:Listener() {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/asb;\n"
        }
      ]
    },
    {
      "label": "service on nats:JetStreamListener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_nats_JetStreamListener",
      "insertText": "service ${1} on new nats:JetStreamListener() {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/nats;\n"
        }
      ]
    },
    {
      "label": "service on nats:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_nats_Listener",
      "insertText": "service ${1} on new nats:Listener(${2:\"\"}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/nats;\n"
        }
      ]
    },
    {
      "label": "service on trigger.google.mail:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_trigger_google_mail_Listener",
      "insertText": "service ${1} on new mail:Listener(${2:{clientId: \"\", clientSecret: \"\", refreshUrl: \"\", refreshToken: \"\", project: \"\", callbackURL: \"\"}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/trigger.google.mail;\n"
        }
      ]
    },
    {
      "label": "service on mqtt:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_mqtt_Listener",
      "insertText": "service ${1} on new mqtt:Listener(${2:\"\"},${2:\"\"},${2:\"\"}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/mqtt;\n"
        }
      ]
    },
    {
      "label": "service on trigger.github:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_trigger_github_Listener",
      "insertText": "service ${1} on new github:Listener() {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/trigger.github;\n"
        }
      ]
    },
    {
      "label": "service on ftp:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_ftp_Listener",
      "insertText": "service ${1} on new ftp:Listener(${2:{}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/ftp;\n"
        }
      ]
    },
    {
      "label": "service on trigger.hubspot:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_trigger_hubspot_Listener",
      "insertText": "service ${1} on new hubspot:Listener(${2:{clientSecret: \"\", callbackURL: \"\"}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/trigger.hubspot;\n"
        }
      ]
    },
    {
      "label": "service on trigger.shopify:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_trigger_shopify_Listener",
      "insertText": "service ${1} on new shopify:Listener(${2:{apiSecretKey: \"\"}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/trigger.shopify;\n"
        }
      ]
    },
    {
      "label": "service on file:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_file_Listener",
      "insertText": "service ${1} on new file:Listener(${2:{path: \"\"}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/file;\n"
        }
      ]
    },
    {
      "label": "service on tcp:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_tcp_Listener",
      "insertText": "service ${1} on new tcp:Listener(${2:0}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/tcp;\n"
        }
      ]
    },
    {
      "label": "service on trigger.aayu.mftg.as2:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_trigger_aayu_mftg_as2_Listener",
      "insertText": "service ${1} on new as2:Listener() {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/trigger.aayu.mftg.as2;\n"
        }
      ]
    },
    {
      "label": "service on trigger.asb:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_trigger_asb_Listener",
      "insertText": "service ${1} on new asb:Listener(${2:{connectionString: \"\"}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/trigger.asb;\n"
        }
      ]
    },
    {
      "label": "service on graphql:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_graphql_Listener",
      "insertText": "service ${1} on new graphql:Listener(${2:0}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/graphql;\n"
        }
      ]
    },
    {
      "label": "service on trigger.quickbooks:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_trigger_quickbooks_Listener",
      "insertText": "service ${1} on new quickbooks:Listener(${2:{verificationToken: \"\"}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/trigger.quickbooks;\n"
        }
      ]
    },
    {
      "label": "service on websub:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_websub_Listener",
      "insertText": "service ${1} on new websub:Listener(${2:0}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/websub;\n"
        }
      ]
    },
    {
      "label": "service on email:ImapListener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_email_ImapListener",
      "insertText": "service ${1} on new email:ImapListener(${2:{host: \"\", username: \"\", password: \"\"}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/email;\n"
        }
      ]
    },
    {
      "label": "service on email:PopListener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_email_PopListener",
      "insertText": "service ${1} on new email:PopListener(${2:{host: \"\", username: \"\", password: \"\"}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/email;\n"
        }
      ]
    },
    {
      "label": "service on trigger.slack:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_trigger_slack_Listener",
      "insertText": "service ${1} on new slack:Listener(${2:{verificationToken: \"\"}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/trigger.slack;\n"
        }
      ]
    },
    {
      "label": "service on trigger.asgardeo:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_trigger_asgardeo_Listener",
      "insertText": "service ${1} on new asgardeo:Listener(${2:{clientId: \"\", clientSecret: \"\", organization: \"\", tokenEndpointHost: \"\", callbackURL: \"\", hubURL: \"\", keyServiceURL: \"\"}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/trigger.asgardeo;\n"
        }
      ]
    },
    {
      "label": "service on trigger.google.calendar:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_trigger_google_calendar_Listener",
      "insertText": "service ${1} on new calendar:Listener(${2:{calendarId: \"\", callbackURL: \"\", clientId: \"\", clientSecret: \"\", refreshUrl: \"\", refreshToken: \"\"}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/trigger.google.calendar;\n"
        }
      ]
    },
    {
      "label": "service on trigger.google.drive:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_trigger_google_drive_Listener",
      "insertText": "service ${1} on new drive:Listener(${2:{clientId: \"\", clientSecret: \"\", refreshUrl: \"\", refreshToken: \"\", callbackURL: \"\"}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/trigger.google.drive;\n"
        }
      ]
    },
    {
      "label": "service on sap.jco:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_sap_jco_Listener",
      "insertText": "service ${1} on new jco:Listener(${2:{gwhost: \"\", gwserv: \"\", progid: \"\"}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/sap.jco;\n"
        }
      ]
    },
    {
      "label": "service on websubhub:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_websubhub_Listener",
      "insertText": "service ${1} on new websubhub:Listener(${2:0}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/websubhub;\n"
        }
      ]
    },
    {
      "label": "service on rabbitmq:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_rabbitmq_Listener",
      "insertText": "service ${1} on new rabbitmq:Listener(${2:\"\"},${2:0}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/rabbitmq;\n"
        }
      ]
    },
    {
      "label": "service on grpc:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_grpc_Listener",
      "insertText": "service ${1} on new grpc:Listener(${2:0}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/grpc;\n"
        }
      ]
    },
    {
      "label": "service on trigger.salesforce:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_trigger_salesforce_Listener",
      "insertText": "service ${1} on new salesforce:Listener(${2:{username: \"\", password: \"\", channelName: \"\"}}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/trigger.salesforce;\n"
        }
      ]
    },
    {
      "label": "service on kafka:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_kafka_Listener",
      "insertText": "service ${1} on new kafka:Listener(${2:\"\"}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerinax/kafka;\n"
        }
      ]
    },
    {
      "label": "service on udp:Listener",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "AC",
      "filterText": "service_udp_Listener",
      "insertText": "service ${1} on new udp:Listener(${2:0}) {\n\n}\n",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/udp;\n"
        }
      ]
    }
  ]
}
